/* global __dirname */
/* generated by unstuck-webpack */

var path = require('path');
var webpack = require('webpack');
var ExtractTextPlugin = require("extract-text-webpack-plugin");
var dir_js = path.resolve(__dirname, 'app');
var dir_css = path.resolve(__dirname, 'styles');
var dir_build = path.resolve(__dirname, 'dist');

module.exports = {
    entry: {
        app: './app/index.js'
    },
    output: {
        path: __dirname,
        publicPath: '/',
        filename: './dist/[name].bundle.js'
    },
    resolve: {
       extensions: ['', '.js', '.jsx']
    },
    devServer: {
        historyApiFallback: true,
        contentBase: dir_build
    },
    postcss: function () {
        return [require('autoprefixer')];
    }, 
    devtool: 'source-map',
    stats: {
        colors: true,
        chunkModules: false
    },
    plugins: [
        new ExtractTextPlugin("[name].css", {  allChunks: true }), 
        new webpack.optimize.CommonsChunkPlugin("./dist/init.js"),
        new webpack.NoErrorsPlugin()
    ],

    module: {
        loaders: [
            {
                loader: 'file?name=assets[name].[ext]',
                test: /\.png($|\?)|\.woff($|\?)|\.woff2($|\?)|\.ttf($|\?)|\.eot($|\?)|\.svg($|\?)/
            },
            {
                loader: 'babel-loader',
                test: /\.js($|\?)|\.jsx($|\?)/,
                exclude: /node_modules/,
                presets : ['es2015', 'react']
            },
            {
                loader: 'file?name=/[name].html',
                test: /\.html$/
            },
            {
                loader: ExtractTextPlugin.extract('style-loader', 'css-loader?sourceMap!postcss-loader!sass-loader?sourceMap'),
                test: /\.sass$/
            }
        ],
        preLoaders: [
          {
            test: /\.js($|\?)|\.jsx($|\?)/,
            loaders: ['eslint'],
            exclude : [/node_modules/]
          }
        ]
    }
}
